{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Info","재고","Detail","useState","alert","alert변경","inputData변경","useEffect","타이머","setTimeout","console","log","clearTimeout","useParams","history","useHistory","findItem","shoes","find","item","className","onChange","e","target","value","src","width","onClick","재고변경","push","Card","i","App","Data","shoes변경","Navbar","bg","expand","Container","Brand","href","Toggle","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Button","variant","map","a","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2afd539f.chunk.js","sourcesContent":["/* eslint-disable */\r\nexport default\r\n[\r\n    {\r\n        id: 0, //영구적인 번호\r\n        title : \"White and Black\",\r\n        content : \"Born in France\",\r\n        price : 120000\r\n\r\n    },\r\n    {\r\n        id: 1,\r\n        title : \"Red Knit\",\r\n        content : \"Born in Seoul\",\r\n        price : 110000\r\n  \r\n    },\r\n    {\r\n        id: 2,\r\n        title : \"Grey Yordan\",\r\n        content : \"Born in States\",\r\n        price : 130000\r\n\r\n    }\r\n]","/* eslint-disable */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory , useParams } from 'react-router';\r\nimport styled from 'styled-components';\r\n\r\nimport './Detail.scss';\r\n\r\nlet 박스 = styled.div `padding : 20px;`;\r\nlet 제목 = styled.h4 `font-size : 25px; color : ${ props => props.색상 }`;\r\n\r\nfunction Detail(props){\r\n    //2초 후에 거거 alert 창을 안보이게 해주셈 - 숙제\r\n    let [alert, alert변경] = useState(true);\r\n    let [inputData, inputData변경] = useState('');\r\n    \r\n    useEffect(()=>{\r\n      let 타이머 = setTimeout(()=>{alert변경(false)}, 2000);\r\n      console.log('hellow');\r\n      return () =>{clearTimeout(타이머)}\r\n    },[alert]);\r\n\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    let findItem = props.shoes.find(item => item.id == id);\r\n\r\n    return(\r\n    <div className=\"container\">\r\n        <박스>\r\n            <제목 className=\"red\">Detail</제목>\r\n            {/* <제목 색상=\"orange\">Detail2</제목> */}\r\n        </박스>\r\n        <input onChange={(e)=>{inputData변경(e.target.value)}}/>\r\n        {\r\n            alert === true\r\n            ?   (\r\n                    <div className=\"my-alert2\">\r\n                        <p>재고가 얼마 남지 않았어요</p>\r\n                    </div>\r\n                )\r\n            :null\r\n            }\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                <img src={'https://codingapple1.github.io/shop/shoes'+ (findItem.id+ 1) +'.jpg'} width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{findItem.title}</h4>\r\n                <p>{findItem.content}</p>\r\n                <p>{findItem.price}원</p>\r\n                <Info 재고={props.재고}></Info>\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    재고변경(props.재고변경())}}>주문하기</button>&nbsp;\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    history.push('/')\r\n                    }}> 뒤로하기</button>     \r\n            </div>\r\n        </div>\r\n    </div> \r\n    )\r\n}\r\n//Component\r\nfunction Info(props){\r\n    return(\r\n        <p>재고 : {props.재고[0]}</p>\r\n    )\r\n}\r\n\r\nexport default Detail;","/* eslint-disable */\nimport React, {useState} from 'react';\nimport './App.css';\nimport { Navbar,Container,Nav,NavDropdown, Button} from 'react-bootstrap';\nimport Data from './data.js';\nimport {Link, Route, Switch} from 'react-router-dom'\nimport Detail from './Detail.js';\nimport axios  from 'axios'; //React Ajax 이용시 참고할 문서도 많고 정말 용이함 \n\nfunction App() {\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">      \n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Shop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail\">Link</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>     \n        <Route exact path=\"/\">\n          <div className=\"jumbotron-custom\">\n            <h1>20% Season Off</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </div>\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                shoes.map((a,i)=>{\n                  return <Card shoes={a} i={i} key={i}/>  \n                //return <Card shoes={shoes[i]} i={i} key={i}/>  상단과 같음\n                })             \n              }          \n            </div>\n            <button className=\"btn btn-primary\" onClick={()=>{\n\n                //axios.post('서버URL', {id:'coding', pw: 1234}).then();\n\n                //로딩중이라는 UI 띄움\n                axios.get('https://codingapple1.github.io/shop/data2.json')\n                //Ajax 요청 성공시\n                .then((result)=>{ \n                  //로딩중이라는 UI 안보이게 처리\n                  shoes변경([...shoes, ...result.data]);\n                })\n                //Ajax 요청 실패시\n                .catch(()=>{ \n                  //로딩중이라는 UI 안보이게 처리\n                  console.log('실패')  \n                })\n              }}>더보기\n            </button>\n\n          </div>  \n        </Route>\n\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} 재고={재고} 재고변경={재고변경}/>\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무거나 적었을때 이거 보여주셈</div>\n        </Route>\n      </Switch>\n      \n    </div>\n  );\n}\n//컴포넌트는 필수가 아닌 선택 하지만, 라우터 진행시 필수\nfunction Card(props){\n  return(\n    <div className=\"col-md-4\">\n      <img src={'https://codingapple1.github.io/shop/shoes'+ (props.i + 1)+'.jpg'} width=\"100%\"/>\n      <h4>{props.shoes.title}</h4>\n      <p>{props.shoes.content} & {props.shoes.price}</p>\n    </div>\n  )\n}\n\nexport default App;\n\n\n// 김민욱 개발 코딩\n// shoes.map(function(item,i){\n//  return(\n//   <div className=\"col-md-4\" key={i}>\n//     <img src={'https://codingapple1.github.io/shop/shoes'+ (i+1)+'.jpg'} width=\"100%\"/>\n//     <h4>{item.title}</h4>\n//     <p>{item.content} & {item.price}</p>\n//   </div>\n//  ) \n// })","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//BrowserRouter URL # 가 없이 진행 할수 있음 \n//HashRouter 라우터를 좀더 안정하게 할수 있음\n\n//BrowserRouter는 라우팅을 리액트가 아니라, 서버에게 요청할 수도 있어서 위험\n\nimport { BrowserRouter } from 'react-router-dom';\n//import { HashRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}